{"version":3,"sources":["components/Square.js","containers/Board.js","containers/Game.js","index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","Board","state","Array","fill","xIsNext","this","slice","min","max","num","Math","floor","random","randomNumber","setState","handleClick","status","winner","renderSquare","React","Component","Game","ReactDOM","render","document","getElementById"],"mappings":"4NAiBeA,MAVf,SAAgBC,GAEd,OACE,4BAAQC,UAAU,SAASC,QAAUF,EAAME,SACzCF,EAAMG,QC2EZ,SAASC,EAAgBC,GAavB,IAXA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BE,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,OAAO,KAkBMG,M,kDAvHb,WAAYZ,GAAO,IAAD,8BAChB,cAAMA,IAGDa,MAAQ,CACXR,QAASS,MAAM,GAAGC,KAAK,MACvBC,SAAQ,GANM,E,wDAUNT,GAGV,IAAMF,EAAUY,KAAKJ,MAAMR,QAAQa,QAEnC,IAAId,EAAgBC,KAAYA,EAAQE,GAAxC,CAMA,GAAGU,KAAKJ,MAAMG,QACZX,EAAQE,GAAK,IAKbF,EA8EN,SAAsBc,EAAKC,EAAKf,GAC9B,IAAIgB,EAAMC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,IAAQA,EACpD,GAAmB,MAAhBd,EAAQgB,GACT,OAAOA,EAET,IAAK,IAAId,EAAE,EAAIA,EAAIF,EAAQG,OAAQD,IACjC,GAAiB,MAAdF,EAAQE,GAAW,CACpBc,EAAMd,EACN,MAGJ,OAAOc,EA5FQI,CAAa,EAAE,EAAGpB,IAGb,IAIlBY,KAAKS,SAAS,CACZrB,QAASA,EACTW,QAASC,KAAKJ,MAAMG,a,mCAKXT,GAAI,IAAD,OACd,OAAO,kBAAC,EAAD,CAEPJ,MAAQc,KAAKJ,MAAMR,QAAQE,GAC3BL,QAAU,kBAAM,EAAKyB,YAAYpB,Q,+BAQjC,IACIqB,EADEC,EAASzB,EAAgBa,KAAKJ,MAAMR,SAS1C,OAPIwB,IACFD,EAAS,cAAgBC,GAOzB,6BACA,yBAAK5B,UAAU,UAAU2B,GACzB,yBAAK3B,UAAU,aACdgB,KAAKa,aAAa,GAClBb,KAAKa,aAAa,GAClBb,KAAKa,aAAa,IAEnB,yBAAK7B,UAAU,aACdgB,KAAKa,aAAa,GAClBb,KAAKa,aAAa,GAClBb,KAAKa,aAAa,IAEnB,yBAAK7B,UAAU,aACdgB,KAAKa,aAAa,GAClBb,KAAKa,aAAa,GAClBb,KAAKa,aAAa,S,GA5ELC,IAAMC,WCgBXC,E,uKAdX,OACE,yBAAKhC,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,aACb,8BACA,mC,GATS8B,IAAMC,WCGzBE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0a35e551.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// Delete the constructor from Square\r\n// because Square no longer keeps track of the gameâ€™s state!\r\n\r\n// function() for the components that do not have their own state -for better undestanding!\r\n// it only returns what should be rendered to the parent class, or in this case to the BOARD.js\r\nfunction Square(props){\r\n  debugger;\r\n  return(\r\n    <button className=\"square\" onClick={ props.onClick }>\r\n    { props.value }\r\n    </button>\r\n  );\r\n}\r\n\r\n\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from '../components/Square';\r\n\r\nclass Board extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    // init state\r\n    this.state = {\r\n      squares: Array(9).fill(null),\r\n      xIsNext:true,\r\n    }\r\n  }\r\n\r\n  handleClick(i){\r\n    debugger;\r\n    // making a copy of this state array\r\n    const squares = this.state.squares.slice();\r\n\r\n    if (calculateWinner(squares) || squares[i]){\r\n      return;\r\n    }\r\n\r\n    // if xIsNext=true then 'x', if not the 'o'\r\n    //squares[i]= this.state.xIsNext ? 'X' : 'O';\r\n    if(this.state.xIsNext){\r\n      squares[i] = \"X\";\r\n\r\n      var comp = randomNumber(1,9, squares);\r\n      debugger;\r\n\r\n      squares[comp] = \"O\";\r\n\r\n    }\r\n    // updating the state\r\n    this.setState({\r\n      squares: squares, // updates the array\r\n      xIsNext: this.state.xIsNext, // updates the X value to true or false\r\n    });\r\n  }\r\n\r\n\r\n  renderSquare(i) {\r\n    return <Square\r\n    // passing down two props to the Square component: VALUE and onClick();\r\n    value={ this.state.squares[i] }\r\n    onClick={ () => this.handleClick(i) }\r\n    />\r\n  }\r\n\r\n  render() {\r\n    // changing the status of which player takes turn\r\n    // const status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n\r\n    const winner = calculateWinner(this.state.squares);\r\n    let status;\r\n    if (winner){\r\n      status = 'Winner is: ' + winner;\r\n    } else {\r\n      //  status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n      <div className=\"status\">{status}</div>\r\n      <div className=\"board-row\">\r\n      {this.renderSquare(0)}\r\n      {this.renderSquare(1)}\r\n      {this.renderSquare(2)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n      {this.renderSquare(3)}\r\n      {this.renderSquare(4)}\r\n      {this.renderSquare(5)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n      {this.renderSquare(6)}\r\n      {this.renderSquare(7)}\r\n      {this.renderSquare(8)}\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  // possible values for the winner of this game\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// comp func for 'O'\r\nfunction randomNumber(min, max, squares) {\r\n  var num = Math.floor(Math.random() * (max - min)) + min;\r\n  if(squares[num] == null){\r\n    return num;\r\n  }\r\n  for (var i=0 ; i < squares.length; i++){\r\n    if(squares[i] == null){\r\n      num = i;\r\n      break;\r\n    }\r\n  }\r\n  return num;\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport Board from './Board';\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{/* status */}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Game from './containers/Game';\r\n\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}